name: Azure Auto Deploy - Zero Manual

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AZURE_RG: appsvc_linux_northeurope_basic
  AZURE_APP: econeura-backend-v2
  AZURE_LOCATION: northeurope
  NODE_VERSION: '20.x'
  DB_HOST: econeura-db-5944.postgres.database.azure.com
  DB_NAME: econeura
  REDIS_HOST: econeura-redis-4492.redis.cache.windows.net

jobs:
  health-check-before:
    runs-on: ubuntu-latest
    steps:
      - name: Snapshot estado actual
        run: |
          echo "Pre-deployment health check"
          curl -f https://econeura-backend-v2.azurewebsites.net/ || echo "Backend down before deploy"

  deploy-database:
    runs-on: ubuntu-latest
    needs: health-check-before
    if: false  # Disabled - DB ya configurado manualmente
    steps:
      - run: echo "Database deployment skipped"

  deploy-backend:
    runs-on: ubuntu-latest
    needs: health-check-before
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        working-directory: backend
        run: npm ci --production

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Verificar App Service existe
        id: check-app
        run: |
          EXISTS=$(az webapp show --name ${{ env.AZURE_APP }} --resource-group ${{ env.AZURE_RG }} --query "name" -o tsv 2>/dev/null || echo "")
          if [ -z "$EXISTS" ]; then
            echo "needs_creation=true" >> $GITHUB_OUTPUT
          else
            echo "needs_creation=false" >> $GITHUB_OUTPUT
          fi

      - name: Crear App Service si no existe
        if: steps.check-app.outputs.needs_creation == 'true'
        run: |
          az appservice plan create \
            --name econeura-plan-dev \
            --resource-group ${{ env.AZURE_RG }} \
            --location ${{ env.AZURE_LOCATION }} \
            --sku B1 \
            --is-linux
          
          az webapp create \
            --name ${{ env.AZURE_APP }} \
            --resource-group ${{ env.AZURE_RG }} \
            --plan econeura-plan-dev \
            --runtime "NODE:20-lts"

      - name: Deploy Backend Code
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_APP }}
          package: ./backend

      - name: Configure App Settings
        run: |
          az webapp config appsettings set \
            --name ${{ env.AZURE_APP }} \
            --resource-group ${{ env.AZURE_RG }} \
            --settings \
              NODE_ENV=production \
              OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
              PORT=8080

      - name: Restart App Service
        run: |
          az webapp restart \
            --name ${{ env.AZURE_APP }} \
            --resource-group ${{ env.AZURE_RG }}

      - name: Wait for startup
        run: sleep 60

      - name: Health Check con Retry
        run: |
          for i in {1..5}; do
            if curl -f https://econeura-backend-v2.azurewebsites.net/api/health; then
              echo "Backend healthy"
              exit 0
            fi
            echo "Attempt $i failed, retrying..."
            sleep 30
          done
          echo "Backend health check failed after 5 attempts"
          exit 1

      - name: Rollback si falla
        if: failure()
        run: |
          echo "Deployment failed, triggering rollback"
          az webapp deployment list \
            --name ${{ env.AZURE_APP }} \
            --resource-group ${{ env.AZURE_RG }} \
            --query "[1].id" -o tsv | \
          xargs -I {} az webapp deployment source show \
            --name ${{ env.AZURE_APP }} \
            --resource-group ${{ env.AZURE_RG }} \
            --deployment-id {}

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-backend
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install and Build
        working-directory: frontend
        run: |
          npm ci
          npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

  notify-success:
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: success()
    steps:
      - name: Success notification
        run: |
          echo "Deployment successful"
          echo "Backend: https://econeura-backend-v2.azurewebsites.net"
          echo "Timestamp: $(date)"

  notify-failure:
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: failure()
    steps:
      - name: Failure notification
        run: |
          echo "Deployment failed"
          echo "Check logs at: https://github.com/${{ github.repository }}/actions"

